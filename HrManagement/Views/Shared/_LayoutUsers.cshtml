@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json;
@inject IHttpContextAccessor HttpContextAccessor

@{
    Layout = "/Views/Shared/_LayoutBase.cshtml";

    var userName = HttpContextAccessor.HttpContext?.Session?.GetString("UserName");
    var ProfilePhoto = (HttpContextAccessor.HttpContext?.Session?.GetString("ProfilePhoto") == "" || HttpContextAccessor.HttpContext?.Session?.GetString("ProfilePhoto") == null) ? "/Images/userimage.png" : HttpContextAccessor.HttpContext?.Session?.GetString("ProfilePhoto");
    var UserRoles = HttpContextAccessor.HttpContext?.Session?.GetString("UserRoles");
    var UserRoleName = HttpContextAccessor.HttpContext?.Session?.GetString("UserRoleName");
    var UserSites = HttpContextAccessor.HttpContext?.Session?.GetString("UserSites");
    var UserId = HttpContextAccessor.HttpContext?.Session?.GetString("UserId").Trim();
    var FirstName = HttpContextAccessor.HttpContext?.Session?.GetString("FirstName");
    var LastName = HttpContextAccessor.HttpContext?.Session?.GetString("LastName");
    var PhoneNumber = HttpContextAccessor.HttpContext?.Session?.GetString("PhoneNumber");
    var EmployeeCode = HttpContextAccessor.HttpContext?.Session?.GetInt32("EmployeeCode");
    var Department = HttpContextAccessor.HttpContext?.Session?.GetString("Department");
    var DepartmentSubCategories = HttpContextAccessor.HttpContext?.Session?.GetString("DepartmentSubCategoryName");
    // var Site = HttpContextAccessor.HttpContext?.Session?.GetString("Site");
    //var RoleResources = HttpContextAccessor.HttpContext?.Session.GetString("RoleResources");
    var RoleResources = "";
    if (HttpContextAccessor.HttpContext?.Session?.GetString("RoleResources") != null)
    {
        RoleResources = (HttpContextAccessor.HttpContext?.Session?.GetString("RoleResources") as string);
    }
    var FullName = FirstName + " " + LastName;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>@ViewData["Title"] - My HR</title>

    <link href="@Url.Content("/assets/fonts/css/fonts.css")" rel="stylesheet" />
    <link href="@Url.Content("/css/customstyles.css")" rel="stylesheet" />
    <link href="@Url.Content("/assets/plugins/global/plugins.bundle.css")" rel="stylesheet" />
    <link href="@Url.Content("/assets/css/style.bundle.css")" rel="stylesheet" />
    <link href="@Url.Content("/css/multiselect/multiple-select.min.css")" rel="stylesheet" />
    <link href="@Url.Content("/assets/plugins/custom/datatables/datatables.bundle.css")" rel="stylesheet" />
    <link href="@Url.Content("/dist/css/prism.css")" rel="stylesheet" />
    <link href="@Url.Content("/lib/country-picker/css/bootstrap-select-country.min.css")" rel="stylesheet" />
    
    <script src="@Url.Content("/js/spin.js")"></script>
    <script src="@Url.Content("/js/common.js")"></script>
    <script src="@Url.Content("/lib/jquery/jquery.min.js")" type="text/javascript"></script>

    @* <script src="@Url.Content("/lib/echarts/echarts.common.min.js")"></script> *@
    <script src="@Url.Content("/lib/echarts/echarts.min.js")"></script>

    @await RenderSectionAsync("PageCSS", required: false)

    <style>

        .error {
            color:red;
        }
        .clickable-row {
            cursor: pointer;
            font-size: 13px !important;
            font-weight: 600;
            color: #676767 !important;
        }

            .clickable-row:hover {
                background: #f7f7f7 !important;
            }
            .Primary-color{
            background-color: #3978ea;
            }

        .Primary-font-color {
            color:#3978ea;
        }
    </style>

    <style>
        .help-block.error {
            margin-bottom: 5px;
        }

        .has-error {
            color: red;
        }

            .has-error .form-control {
                border-color: red;
                -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
                box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
            }
    </style>
</head>
<body id="kt_app_body" data-kt-app-layout="dark-sidebar" data-kt-app-header-fixed="true" data-kt-app-sidebar-enabled="true" data-kt-app-sidebar-fixed="true" data-kt-app-sidebar-hoverable="true" data-kt-app-sidebar-push-header="true" data-kt-app-sidebar-push-toolbar="true" data-kt-app-sidebar-push-footer="true" data-kt-app-toolbar-enabled="true" class="app-default">
    <script type="text/javascript">
        var curPage;
        // var txtWait = "SDP.Resources.Strings.txtPleaseWait";
        var txtWait = "Please wait..";
        spin();
    </script>
    <!-- In case of Disabled Javascript, Show this message -->
    <noscript>
        <div style="padding:100px 20px; position: fixed;text-align:center; width: 100%; height:100%; z-index:999999999999999" class="alert alert-danger">
            <h1>
                <i style="font-size:100px" class="fa fa-exclamation-circle fa-5x"></i>
            </h1>
            <h1>OOPSS...</h1>
            @* <h3 style="text-transform:uppercase">@Resources.Strings.txtJavascriptDisabledError</h3> *@
            <h3 style="text-transform:uppercase">Error</h3>
        </div>
    </noscript>
    <div id="spin">
    </div>
    <!-- id to get the root path of application -->
    @* <link rel="home" id="ApplicationRoot" href='@string.Format("{0}://{1}{2}", @Url.Scheme, Request.Url.Authority, Url.Content("~"))' /> *@



    @*<!--begin::Theme mode setup on page load--> *@
    @* <script>var defaultThemeMode = "light"; var themeMode; if ( document.documentElement ) { if ( document.documentElement.hasAttribute("data-bs-theme-mode")) { themeMode = document.documentElement.getAttribute("data-bs-theme-mode"); } else { if ( localStorage.getItem("data-bs-theme") !== null ) { themeMode = localStorage.getItem("data-bs-theme"); } else { themeMode = defaultThemeMode; } } if (themeMode === "system") { themeMode = window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light"; } document.documentElement.setAttribute("data-bs-theme", themeMode); }</script> *@
    @*<!--end::Theme mode setup on page load--> *@
 
        <!-- Top Navbar -->
        <nav class="navbar topbar navbar-expand-lg py-3">
            <div class="container-fluid">
                <div class="d-flex align-items-center gap-3">
                    <!-- Offcanvas toggle for small screens -->
                    <button class="btn btn-outline-secondary d-lg-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasSidebar" aria-controls="offcanvasSidebar" aria-label="Open menu">
                        <i class="bi bi-list"></i>
                    </button>

                    <!-- Brand -->
                    <a class="navbar-brand brand d-flex align-items-center gap-2" href="#">
                        <img src="https://cdn.courses.apisystem.tech/memberships/hqso2DcoE5nrxoLOqZ3I/product/6dd769fb-41cf-4369-8d9e-005f7cff0a27-tc7c" alt="avatar" class="rounded-circle me-2" width="38" height="38">
                        <span>Revital Health</span>
                    </a>
                </div>

                <!-- Center search -->
                <div class="mx-auto d-none d-lg-flex w-75 justify-content-center">
                    <form class="w-100 d-none">
                        <div class="input-group search-input mx-auto">
                            <span class="input-group-text bg-white border-0"><i class="bi bi-search"></i></span>
                            <input id="globalSearch" type="search" class="form-control" placeholder="Search tutorials, chapters, keywords..." aria-label="Search tutorials">
                            <button class="btn btn-outline-secondary" type="submit">Search</button>
                        </div>
                    </form>
                </div>

                <!-- Profile on right -->
                <div class="d-flex align-items-center gap-3 d-none">
                    <button class="btn btn-light d-none d-lg-inline d-none" type="button"></i></button>
                    <div class="dropdown">
                        <a class="d-flex align-items-center text-decoration-none" href="#" id="profileMenu" data-bs-toggle="dropdown" aria-expanded="false">
                            <img src="https://cdn.courses.apisystem.tech/memberships/hqso2DcoE5nrxoLOqZ3I/product/6dd769fb-41cf-4369-8d9e-005f7cff0a27-tc7c" alt="avatar" class="rounded-circle me-2" width="38" height="38">
                            <div class="d-none d-md-block text-start">
                                <div style="font-weight:600">Jane Doe</div>
                                <div style="font-size:12px;color:#6b7280">Instructor</div>
                            </div>
                        </a>
                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="profileMenu">
                            <li><a class="dropdown-item" href="#"><i class="bi bi-person me-2"></i>Profile</a></li>
                            <li><a class="dropdown-item" href="#"><i class="bi bi-gear me-2"></i>Settings</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item text-danger" href="#"><i class="bi bi-box-arrow-right me-2"></i>Sign out</a></li>
                        </ul>
                    </div>
                </div>

            <div class="app-navbar-item ms-1 ms-md-4" id="kt_header_user_menu_toggle">
                <!--begin::Menu wrapper-->
                <div class="cursor-pointer symbol symbol-35px" data-kt-menu-trigger="{default: 'click', lg: 'hover'}" data-kt-menu-attach="parent" data-kt-menu-placement="bottom-end">
                    <img src="@ProfilePhoto" class="rounded-3" alt="user"> <span class="text-black bold">@FullName</span>
                </div>
                <!--begin::User account menu-->
                <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-800 menu-state-bg menu-state-color fw-semibold py-4 fs-6 w-275px" data-kt-menu="true" style="">
                    <!--begin::Menu item-->
                    <div class="menu-item px-3">
                        <div class="menu-content d-flex align-items-center px-3">
                            <!--begin::Avatar-->
                            <div class="symbol symbol-50px me-5">
                                <img alt="Logo" src="@ProfilePhoto">
                            </div>
                            <!--end::Avatar-->
                            <!--begin::Username-->
                            <div class="d-flex flex-column">
                                <div class="fw-bold d-flex align-items-center fs-5">
                                    @FullName
                                </div>
                            </div>
                            <!--end::Username-->
                        </div>
                    </div>
                    <!--end::Menu item-->
                    <!--begin::Menu separator-->
                    <div class="separator my-2 "></div>
                    <!--end::Menu separator-->
                    <!--begin::Menu item-->
                    <div class="menu-item px-5">
                        <a href="/Employee/MyProfile" class="menu-link px-5">My Profile</a>
                    </div>
                    <!--end::Menu item-->
                    <!--begin::Menu separator-->
                    <div class="separator my-2"></div>
                    <!--end::Menu separator-->
                    <!--begin::Menu item-->
                    <div class="menu-item px-5 my-1">
                        <span class="menu-link px-5" data-bs-toggle="modal" data-bs-target="#modal-change-password">Change Password</span>
                    </div>
                    <!--end::Menu item-->
                    <!--begin::Menu separator-->
                    <div class="separator my-2"></div>
                    <!--end::Menu separator-->
                    <!--begin::Menu item-->
                    <div class="menu-item px-5">
                        <a href="~/Home/Logout" class="menu-link btn-logout px-5">Sign Out</a>
                    </div>
                    <!--end::Menu item-->
                </div>
                <!--end::User account menu-->
                <!--end::Menu wrapper-->
            </div>

            </div>
        </nav>
    
    <!--begin::Scrolltop-->
   
    <div>
        @RenderBody()
    </div>




    <!-- Load jQuery (only once, full version) -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
  
    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.5/dist/jquery.validate.min.js"></script>


    <!-- Other core libraries -->
    <script src="~/lib/moment.js/moment.min.js"></script>
    <script src="~/assets/plugins/global/plugins.bundle.js"></script>
    <script src="~/assets/js/scripts.bundle.js"></script>
    <script src="~/src/js/components/blockui.js"></script>
    <script src="~/src/js/components/menu.js"></script>
    <script src="~/scripts/common-theme.js"></script>
    <script src="~/assets/js/widgets.bundle.js"></script>
    <script src="~/assets/js/custom/widgets.js"></script>
    <script src="~/assets/plugins/custom/datatables/datatables.bundle.js"></script>
    <script src="~/scripts/ellipsis.min.js"></script>
    <script src="~/scripts/multiselect/multiple-select.min.js"></script>
    <script src="~/js/bread-crumbs.js"></script>
    <script src="@Url.Content("/js/util.js")"></script>
    <script src="@Url.Content("/dist/js/prism.js")"></script>
    <script src="@Url.Content("/js/common-ajax.js")" asp-append-version="true"></script>
    <script src="@Url.Content("/scripts/image-compression.js")"></script>
   
    <script src="@Url.Content("/scripts/sitelayout.js")" asp-append-version="true"></script>
 

    <script>

        // var globalRoles = @Html.Raw(UserRoles);
        var UserId = "@UserId";
        var FullName = "@FullName";
        var Phone = "@PhoneNumber";
        var EmployeeCode = "@EmployeeCode";
        var UserRoleName = "@UserRoleName";
        // var Department = "Department";
        var UserSites = JSON.parse( @(Html.Raw(JsonConvert.SerializeObject(UserSites))));
        var UserDepartments = JSON.parse( @(Html.Raw(JsonConvert.SerializeObject(Department))));
        var UserDepartmentSubCategories = JSON.parse( @(Html.Raw(JsonConvert.SerializeObject(DepartmentSubCategories))));
        var _RoleResources = @(Html.Raw(JsonConvert.SerializeObject(RoleResources)))
        var UserControls = JSON.parse(_RoleResources);
        console.log(UserControls);
        // function hasRole(role) {
        //     var roleIDs = globalRoles.map(Number);
        //     return roleIDs.indexOf(role) > -1;
        // }

        // function CheckRoles(rolesAllowed) {
        //     if (rolesAllowed.length == 0)
        //         return true;
        //     var allowed = false;
        //     var roles = rolesAllowed.split(',');
        //     for (let i = 0; i < roles.length; i++) {
        //         if (globalRoles.indexOf(roles[i]) > -1) {
        //             allowed = true;
        //             break;
        //         }

        //     }
        //     return allowed;
        // }

        localStorage.setItem("UserId", UserId);
        localStorage.setItem("FullName", FullName);

    </script>

    <script>
        var sitePath = getVirtualDirectory();

        function showSpinner() {
            //Metronic.blockUI({
            //    boxed: true
            //});
            spin();
        }

        function hideSpinner() {
            //window.setTimeout(function () {
            //    Metronic.unblockUI();
            //}, 1000);
            unspin();
        }

        $(document).on("click",".btn-logout", function(){
           localStorage.removeItem("jwtToken");
        });

        $(document).ready(function () {
            addSidepanelSections();
        });

        function CheckIfHasControl(option){
            
            console.log(option);
            for (var i = 0; i < UserControls.length; i++) {
                if (UserControls[i].hasOwnProperty(option)) {
                    return  true;
                    break; // No need to check further once found
                }
            }
        }

        function GetControl(option){
            for (var i = 0; i < UserControls.length; i++) {
                if (UserControls[i].hasOwnProperty(option)) {
                    return  UserControls[i][option];
                    break; // No need to check further once found
                }
            }
        }


        function addSidepanelSections() {
            
            if (window.LayoutConfigs) {
              
                console.log(window.LayoutConfigs);
                var $dashboardItems = $('.page-sidebar-menu');
                console.log($dashboardItems);

                var keys = Object.keys(LayoutConfigs.FormGroups)
                keys.forEach(function (opt) {

                    if(CheckIfHasControl(opt)){
                        var formgroup = LayoutConfigs.FormGroups[opt];
                     

                        if (formgroup.EnabledByBranch && UserBranchOptions.indexOf(opt) < 0) {
                            return;
                        }
                        if (formgroup.HiddenOnDashboard == true) return;
                        //if (formgroup.ShowOnDashboardforPDI == true && sitePath.indexOf('pdischeduling') <= -1) return;
                        var $sec = $($("#tempSpSection").html());
                        $sec.find('.sec-title').text((formgroup.Title));
                        // $sec.find('.sec-title').text($.i18n(formgroup.Title));

                        //$sec.find('.list-toggle-container').attr("href", "#" + opt);
                        //$sec.find('.panel-collapse').attr("id", opt);
                        var linkKeys = Object.keys(formgroup.DashboardLinks);

                        console.log("LinkKeys",linkKeys);

                        let section = GetControl(opt);

                        var linkcount = 0;
                        linkKeys.forEach(function (linkKey) {
                            if(section && section.includes(linkKey)){
                            var link = formgroup.DashboardLinks[linkKey];
                            var allowedRoles = typeof (link.AllowedRoles) != 'undefined' ? link.AllowedRoles : "";
                            // var allowed = CheckRoles(allowedRoles);
                            var allowed = true;
                            if (allowed == true) {
                                var $link = $($("#tempSpLink").html());
                                if (link.IconImg) {
                                    $link.find('.link-icon-img').attr('src', sitePath + link.IconImg).show();
                                }
                                else if (link.IconFa) {
                                    $link.find('.link-icon-fa').addClass(link.IconFa).show();
                                }

                                link.Text && $link.find('.link-text').text((link.Text));
                                // link.Text && $link.find('.link-text').text($.i18n(link.Text));
                                link.Link && $link.find('a').attr('href', sitePath + link.Link);
                                link.addClass && $link.find('a').attr('href', sitePath + link.Link).addClass(link.addClass);
                                $link.addClass(linkKey);
                                $link.attr("id", linkKey);

                                if (link.FormLink) {
                                    //var prefix = FormsConfigs.Configurations[linkKey].Label ? FormsConfigs.Configurations[linkKey].Prefix + " " : "";
                                    //$link.find('.link-text').text(prefix + FormsConfigs.Configurations[linkKey].Name);
                                    $link.find('.link-text').text(link.Text);

                                        $link.find('a').attr('href', sitePath + "form?ft=" + linkKey);

                                }

                                $sec.find('.sec-links').append($link);
                                linkcount++;


                            }

                            }
                        });

                        if (linkcount == 0) {
                            $($sec).remove();
                        }
                        else{

                            $dashboardItems.append($sec);
                        }
                    }
                });
                $dashboardItems.append($dashboardItems.find('.admin-sec'));
            }
        }
    </script>
    <script>
        var Notifications = {};
         HRMSUtil.onDOMContentLoaded(function () {
            updateMessageNotification(function(){
                updateMessageNotificationCount();
            });
        });
         function updateMessageNotificationCount() {
                var count = 0;
                count = parseInt($('.message-count').html()) || 0;
                count = Notifications.length;
                $('.message-count').html(count);
                $('#message-badge-count').html(count);
         }
         function updateMessageNotification(cb) {
                var url = sitePath + 'api/EmployeeAPI/GetEmployeeNotifications?EmployeeCode='+"@EmployeeCode";
                Ajax.getNotifications(url, function (response) {
                    if (response.StatusCode == 200) {
                        $('.message-items').html('')
                        Notifications = response.Notifications;
                         for(var i = 0; i < Notifications.length; i++){
                             var html = Notifications[i].NotificationDescription;
                             var div = document.createElement("div");
                             div.innerHTML = html;
                             var messageText = div.textContent || div.innerText || "";
                             var message = messageText.length >= 60 ? messageText.substring(0, 59) + "..." : messageText;
                             $('.message-items').append($('<div class="separator separator-dashed my-1"></div><a href="' + sitePath +''+Notifications[i].NotificationUrl +'" class="d-flex flex-stack py-4 bg-active-secondary bg-hover-gray-100 mark-as-read" data-id="'+Notifications[i].Id+'"><div class="d-flex align-items-center"><div class="mb-0 me-2"><div class="text-gray-500 fs-7">' + message + '</div></div></div></a><div class="separator separator-dashed my-1"></div>'));
                         }
                         if(cb){cb()}
                    }
                });
         }

         // Also update notifications when the page is shown (including when coming back from another tab)
         document.addEventListener('visibilitychange', function() {
            if (document.visibilityState === 'visible') {
                updateMessageNotification(function(){
                    updateMessageNotificationCount();
                });
            }
         });

         // Update notifications periodically (every 5 minutes)
         setInterval(function() {
            updateMessageNotification(function(){
                updateMessageNotificationCount();
            });
         }, 3 * 60 * 1000);

         $(document).on('click','.mark-as-read', function(){
              var $self = $(this);
              var notificationid = parseInt($self.data('id'));
              $self.remove();
                var count = 0;
                count = parseInt($('.message-count').html()) || 0;
                $('.message-count').html(count-1);
                $('#message-badge-count').html(count-1);

              var url = sitePath + 'api/EmployeeAPI/MarkNotificationAsRead?Id='+notificationid;
                Ajax.post(url, function (response) {
                    //hideSpinner();
                });
         });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
